@*<style>
    .progress-wrap {
        background-color: #e0e0e0;
    }
     .progress {
         background-color: #4cff00;
     }
</style>
<div class="row" data-bind="foreach:activityDays">
    <div class="row">
        <div class="col-sm-4">
            <h4 data-bind="text:activityDate"></h4>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-10 col-sm-offset-2">
            <table class="table">
                <thead>
                    <tr>
                        <th>Activity</th>
                        <th>Started</th>
                        <th>Days</th>
                        <th>Hours</th>
                        <th>Minutes</th>
                        <th>Seconds</th>
                    </tr>
       
                </thead>
                <tbody data-bind="foreach:activities">
                    <tr>
                        <td><span data-bind="text:name"></span></td>
                        <td><span data-bind="text:startedDisplay"></span></td>
                        <td><span data-bind="text:duration.days"></span></td>
                        <td><span data-bind="text:duration.hours"></span></td>
                        <td><span data-bind="text:duration.minutes"></span></td>
                        <td><span data-bind="text:duration.seconds"></span></td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="5">
                            <div class="text-right">
                                <span data-bind="text:duration.days"></span>&nbsp;<span>Days</span>&nbsp;
                                <span data-bind="text:duration.hours"></span>&nbsp;<span>Hours</span>&nbsp;
                                <span data-bind="text:duration.minutes"></span>&nbsp;<span>Minutes</span>&nbsp;
                                <span data-bind="text:duration.seconds"></span>&nbsp;<span>Seconds</span>
                            </div>
                        </td>
                    </tr>
                </tfoot>
            </table>
            <div class="row" data-bind="foreach:activities">
                <div class="col-sm-12">
                    <div style="width:100%">
                        <div class="progress" data-bind="style:{ width:percentage }">&nbsp;<span data-bind="text:percentage"></span>&nbsp;<span data-bind="text:name"></span></div>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>*@


@section scripts{

    <script src="~/Scripts/app/common.js"></script>
    <script>
        var data;
        var stopWatches = [];
        var userSquares = [];
        var dateModels = [];
        var viewModel;
        var model = { activities: [], activityDays: [] };

        function iterateDateModels(dateModel) {
            var totalDuration = _.sum(dateModel.stopWatches, function(d) {
                return d.Elapsed;
            });
            var durationGroup = _.groupBy(dateModel.stopWatches, function(d) {
                return d.UserSquareId;
            });
            var sums = [];
            var durationGroupSums = _.forEach(_.keys(durationGroup), function(d) {
                var item = {
                    userSquareId: d,
                    name:dateModel.name,
                    duration: _.sum(durationGroup[d], function(el) {
                        return (el.Elapsed/(totalDuration/100));
                    })
                };

                sums.push(item);
            });
            dateModel.percentages = sums;
            //get Total Duration
            //var totalDuration = _.sum(stopWatches, function (stopWatch) {
            //   // console.log(stopWatch);
            //    return stopWatch.Elapsed;
            //});
             console.log(dateModel);
        }

        function createDateModels() {
            var groups = _.groupBy(stopWatches, function(stopWatch) {
                return stopWatch.dateDisplay;
            });

            _.forEach(_.keys(groups), function (keyedGroup) {
            
                var item = {
                    key: keyedGroup,
                    name: _.first(groups[keyedGroup]).name,
                    stopWatches: groups[keyedGroup]
                };
            
                iterateDateModels(item);
                dateModels.push(item);
            });

        }

        function iterateStopWatches(us) {
            _.forEach(us.StopWatches, function(stopWatch) {
                if (stopWatch.State > 0) {
                    stopWatch.dateDisplay = new Date(stopWatch.Started).toDateString();
                    stopWatch.name = us.DisplayName;
                    stopWatches.push(stopWatch);
                }
            });
        }

        function iterateUserSquares() {
            _.forEach(data, function(userSquare) {
                userSquares.push(userSquare);
                iterateStopWatches(userSquare);
                createDateModels();
         
            });
        }

        function getData() {
            $.get(rootPath + 'api/Scratch', function(r) {
                data = r;
                buildModel();
                console.log(data);
                //buildViewModel();
            });
        }

        function buildModel() {

            iterateUserSquares();

        };

        function buildViewModel() {
            viewModel = ko.mapping.fromJS(model);
            ko.applyBindings(viewModel);
        }

        $(function() {
            getData();
        });

    </script>
}
